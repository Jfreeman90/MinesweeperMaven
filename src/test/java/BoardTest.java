import com.tsi.minesweeper.board.Board;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class BoardTest {
    //fixed arrays where each bomb is represented by 10 for tests to be done on.
    final int[][] easyBoard = {
                        {0,0,0,0,0,0,0,10,0,10},
                        {0,0,0,0,0,0,0,0,0,0},
                        {0,0,0,0,0,0,0,0,0,0},
                        {0,0,0,10,10,0,0,0,0,0},
                        {0,0,0,0,0,0,0,0,0,0},
                        {0,0,0,0,10,0,0,0,0,0},
                        {0,0,0,0,0,0,0,10,10,0},
                        {0,0,0,0,0,0,0,0,10,0},
                        {0,0,0,0,0,0,0,0,10,0},
                        {0,0,0,0,0,10,0,0,0,0}
                        };

    final int[][] mediumBoard= {
                        {0, 0, 0, 0, 0, 0, 10, 0, 10, 10, 0, 0, 10, 10, 0, 0},
                        {0, 10, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0},
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 10, 0},
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                        {0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0},
                        {0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0},
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10},
                        {0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                        {0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0},
                        {0, 0, 0, 10, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0},
                        {10, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0},
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10},
                        {0, 0, 0, 0, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0},
                        {0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0},
                        {0, 0, 0, 10, 0, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                        {0, 10, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0}
                        };

    final int[][] hardBoard={
                        {0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0},
                        {0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0, 0, 0, 0, 0, 10, 10, 0},
                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 10, 0},
                        {0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0},
                        {0, 10, 10, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 10, 10},
                        {0, 0, 0, 0, 10, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 10, 10, 0},
                        {10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0},
                        {10, 0, 0, 0, 0, 10, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 10, 0, 10},
                        {10, 0, 0, 0, 10, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 10, 10, 0, 10, 10, 0, 0},
                        {0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 10, 10, 0, 0, 0},
                        {0, 0, 10, 0, 0, 0, 10, 10, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 10},
                        {0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                        {0, 0, 0, 0, 10, 0, 10, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10},
                        {0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 10, 0, 0},
                        {0, 10, 0, 10, 10, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10},
                        {0, 0, 0, 10, 0, 10, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 10, 0},
                        {0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                        {0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0},
                        {0, 0, 10, 0, 0, 0, 0, 0, 0, 10, 0, 0, 10, 0, 10, 0, 0, 0, 0, 0, 10, 0},
                        {0, 10, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0},
                        {0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0},
                        {10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 0, 0, 10, 10, 0, 10, 0, 10, 0, 0, 10}
                        };

    @Test
    public void test_setBombs(){
        //create board based of size 10x10 with 15 bombs and 5 flags.
        Board gameBoard = new Board(10, 15, 5);
        gameBoard.setBombs();
        assertEquals(15, gameBoard.valueCount(10), "Expected 15 bombs and didnt return 15.");
        //create board based of size 10x10 with 58 bombs and 5 flags.
        Board gameBoard2 = new Board(10, 58, 5);
        gameBoard2.setBombs();
        assertEquals(58, gameBoard2.valueCount(10), "Expected 58 bombs and didnt return 58.");
    }

    @Test
    public void test_revealedCount(){
        //create board based of size 10x10 with 15 bombs and 5 flags.
        Board gameBoard = new Board(10, 15, 5);
        assertEquals(0,gameBoard.revealedCount(), "Expected 0 revealed squares and did not return 0.");
    }
}

